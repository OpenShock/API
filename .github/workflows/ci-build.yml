on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
    types: [ opened, reopened, synchronize ]
  workflow_call:
    inputs:
      platforms:
        description: 'Platforms to build for'
        required: false
        type: string
      latest:
        description: 'Tag image as latest'
        required: false
        type: boolean
        default: false
  workflow_dispatch:

name: ci-build

env:
  REGISTRY: ghcr.io

jobs:

  tests:
    name: Tests (${{ matrix.name }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: common-unit
            dockerfile: docker/Base.Dockerfile
            image: test-common
            target: test-common
          - name: api-integration
            dockerfile: docker/API.Dockerfile
            image: api-integration-tests
            target: integration-test-api

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run ${{ matrix.name }} tests
        uses: ./.github/actions/test-app
        with:
          dockerfile: ${{ matrix.dockerfile }}
          image: ${{ matrix.image }}
          target: ${{ matrix.target }}

  build:
    name: Build (${{ matrix.image }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: docker/API.Dockerfile
            image: api
          - dockerfile: docker/LiveControlGateway.Dockerfile
            image: live-control-gateway
          - dockerfile: docker/Cron.Dockerfile
            image: cron

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.image }}
        uses: ./.github/actions/build-app
        with:
          dockerfile: ${{ matrix.dockerfile }}
          push: ${{ github.ref_protected && github.event_name != 'pull_request' }}
          image: ${{ matrix.image }}
          platforms: ${{ inputs.platforms || 'linux/amd64' }}
          
  promote-image:
    name: Promote Image (${{ matrix.image }})
    needs: [build, tests]
    runs-on: ubuntu-latest
    if: ${{ github.ref_protected && github.event_name != 'pull_request' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: api
          - image: live-control-gateway
          - image: cron
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.image }}
        uses: ./.github/actions/promote-image
        with:
          image: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image }}:rn-${{ github.run_number }}-a${{ github.run_attempt }}
          latest: ${{ inputs.latest || false }}