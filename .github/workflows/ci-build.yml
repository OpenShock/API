on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
    types: [ opened, reopened, synchronize ]
  workflow_call:
    inputs:
      platforms:
        description: 'Platforms to build for'
        required: false
        type: string
      latest:
        description: 'Tag image as latest'
        required: false
        type: boolean
        default: false
  workflow_dispatch:

name: ci-build

env:
  REGISTRY: ghcr.io

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build API
        uses: ./.github/actions/build-app
        with:
          dockerfile: docker/API.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          image: api
          platforms: ${{ inputs.platforms || 'linux/amd64' }}
          latest: ${{ inputs.latest || false }}
          
      - name: Build LiveControlGateway
        uses: ./.github/actions/build-app
        with:
          dockerfile: docker/LiveControlGateway.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          image: live-control-gateway
          platforms: ${{ inputs.platforms || 'linux/amd64' }}
          latest: ${{ inputs.latest || false }}
          
      - name: Build Cron
        uses: ./.github/actions/build-app
        with:
          dockerfile: docker/Cron.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          image: cron
          platforms: ${{ inputs.platforms || 'linux/amd64' }}
          latest: ${{ inputs.latest || false }}
          
  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref_type == 'branch' && github.event_name != 'pull_request' && github.ref_name == 'master' }}
    environment: production

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github

      - uses: ./.github/actions/kubernetes-rollout-restart
        with:
          apiurl: ${{ secrets.KUBERNETES_APIURL }}
          token: ${{ secrets.KUBERNETES_TOKEN }}
          deployments: ${{ vars.DEPLOYMENT_NAMES }}